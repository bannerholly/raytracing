現状
実際に画面出力 --->viewクラス
カメラに移して透視投影 --->cameraクラス
ベクトルや行列,クォータリオン ---> vec3,matrix4,quatクラス
光線(視点から出すやつ) --->rayクラスの作成
レイトレーシング ---> raytraceクラスを作成<--下地を作成
描画するワールド座標上のもの ---> baseobjectクラスの作成
   以後描く物体はbaseobjectクラスから継承する(球のSphereクラスだけやった)
描画,オブジェクトなどの管理 ---> Sceneクラス<--あとは光源とか追加する
光源に対するクラス ---> Baselightクラスの作成()
その物体の材質を示す ---> Materialクラスの作成 <---あとは発光とテクスチャ
光源クラスでDirectionalLightクラス,PointLightクラスで拡散反射光,鏡面反射の実装,
レイトレで完全鏡面反射の実装
レイトレで屈折を実装
レイトレで影ができるようにするぞ
発光マテリアルが実装できた
materialでテクスチャを貼れるように拡張させる
Planeクラスを作成して平面のオブジェクトの作成
形状のインスタンス,座標変換
objファイルからモデル作成(一応できたけど重いよ)
画像読み込みを拡張させた(PNGとJPEG) <--この2つできたらもうよくねの精神
画像の書き込み機能 <--リアルタイムのやつだからいらない説はあるけども
レイトレの高速化 <--ユニフォームグリッドで許して......

今後
色々なマッピング
 環境マッピング
 バンプマッピング



操作方法
w,s,a,d : 前後左右の移動

↑: 上に移動
↓: 下に移動
←: 左に回転
→: 右に回転

F5: スクショ (今はjpeg方式)

q,Esc : 終了